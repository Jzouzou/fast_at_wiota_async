
async 2.0

1. 发送数据的协议栈缓存队列设为2，发送超出发送队列长度会直接发返回QUEUE_FULL
2. 系统配置增加zc_num，低功耗降压降频需要特殊配置，默认为8
3. 增加低功耗，降压降频，sleep等接口
4. 自动接收控制开关，关闭时，协议栈不会主动监测帧头和接收数据
5. 功率设置增加在静态数据中，修复run之前设置功率不生效的问题
6. 错误包上报接口，由发送方设置，指示是否需要接收方接收错误包

async 2.1

1. 协议栈状态API更新
2. 广播包version的bug修复
3. 频点可在协议栈启动后设置
4. 子帧数大于8时的bug修复
5. 发送数据API中的timeout改为32bit

async 2.2

1. 保存静态数据接口问题解决
2. 低功耗demo
3. uc_wiota_set_wait_cnt改为uc_wiota_set_detect_time，参数单位ms
4. 降频时的系统timer更新

async 2.3

1. 接收停止接口更新，UC_AUTO_RECV_STOP会直接停止正在接收的数据和状态；
2. 发送数据接口的timer bug修复；
3. 校准模式支持，AT+WIOTADJUST；
4. 将带宽设置，移入系统配置接口；
5. 接收数据上报结构体，增加rssi和snr；
6. mcs6/7的传输bug修改；
7. 用户发送广播时，可额外增加3字节的数据头，该数据头99.99%的正确率；
8. 基带版本更新，协议栈其他内部更新。

async 2.4

1. uc_boot_strap.c中增加分频比的初始化
2. 单播重发次数api
3. 广播head data改为2字节
4. 协议栈初始化启动时间缩短
5. 数据发送长度限制更新，广播1021 bytes，单播310 bytes
6. 非全接收模式，改为在接收侧配置
7. 广播时，每个子帧的承载应用数据量增加2bytes
8. uc_wiota_get_subframe_data_len接口更新
9. 单播接收侧的ack发送功率与发送侧一致
